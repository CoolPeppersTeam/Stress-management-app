name: Frontend CI

on:
  push:
    branches: [main-*]
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy.yml'

permissions:
  pull-requests: write
  contents: write

jobs:
  test:
    name: Run Flutter Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.1'
          channel: 'stable'

      - name: Install dependencies
        run: |
          cd frontend
          flutter pub add intl:^0.20.2
          flutter pub add mockito --dev
          flutter pub get

      - name: Run Flutter tests
        id: flutter-tests
        run: |
          cd frontend
          echo "profile_passed=false" >> $GITHUB_OUTPUT
          echo "counter_passed=false" >> $GITHUB_OUTPUT
          echo "registration_passed=false" >> $GITHUB_OUTPUT
          echo "session_passed=false" >> $GITHUB_OUTPUT
          
          if flutter test test/profile_card_test.dart; then
            echo "profile_passed=true" >> $GITHUB_OUTPUT
          fi
          if flutter test test/counter_app_test.dart; then
            echo "counter_passed=true" >> $GITHUB_OUTPUT
          fi
          if flutter test test/registration_form_test.dart; then
            echo "registration_passed=true" >> $GITHUB_OUTPUT
          fi
          if flutter test test/screens/add_session_screen_test.dart; then
            echo "session_passed=true" >> $GITHUB_OUTPUT
          fi

      - name: Calculate score
        id: score
        run: |
          TOTAL=0
          if [[ "${{ steps.flutter-tests.outputs.profile_passed }}" == "true" ]]; then TOTAL=$((TOTAL + 1)); fi
          if [[ "${{ steps.flutter-tests.outputs.counter_passed }}" == "true" ]]; then TOTAL=$((TOTAL + 1)); fi
          if [[ "${{ steps.flutter-tests.outputs.registration_passed }}" == "true" ]]; then TOTAL=$((TOTAL + 1)); fi
          if [[ "${{ steps.flutter-tests.outputs.session_passed }}" == "true" ]]; then TOTAL=$((TOTAL + 1)); fi
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "max_score=4" >> $GITHUB_OUTPUT

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const score = ${{ steps.score.outputs.total }};
            const maxScore = ${{ steps.score.outputs.max_score }};
            const percentage = Math.round((score / maxScore) * 100);
            
            let comment = `### 🧪 Test Results: ${score}/${maxScore} (${percentage}%)\n\n`;
            
            const results = {
              'Flutter Tests': {
                'Profile Card': ${{ steps.flutter-tests.outputs.profile_passed }},
                'Counter App': ${{ steps.flutter-tests.outputs.counter_passed }},
                'Registration Form': ${{ steps.flutter-tests.outputs.registration_passed }},
                'Add Session Screen': ${{ steps.flutter-tests.outputs.session_passed }}
              }
            };
            
            for (const [category, tests] of Object.entries(results)) {
              comment += `#### ${category}\n`;
              for (const [task, passed] of Object.entries(tests)) {
                const status = passed ? '✅ PASSED' : '❌ FAILED';
                comment += `- ${status} ${task}\n`;
              }
              comment += '\n';
            }
            
            comment += `_Generated by GitHub Actions_`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Create commit comment
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const score = ${{ steps.score.outputs.total }};
            const maxScore = ${{ steps.score.outputs.max_score }};
            const percentage = Math.round((score / maxScore) * 100);
            
            let comment = `### 🧪 Test Results: ${score}/${maxScore} (${percentage}%)\n\n`;
            
            const results = {
              'Flutter Tests': {
                'Profile Card': ${{ steps.flutter-tests.outputs.profile_passed }},
                'Counter App': ${{ steps.flutter-tests.outputs.counter_passed }},
                'Registration Form': ${{ steps.flutter-tests.outputs.registration_passed }},
                'Add Session Screen': ${{ steps.flutter-tests.outputs.session_passed }}
              }
            };
            
            for (const [category, tasks] of Object.entries(results)) {
              comment += `#### ${category}\n`;
              for (const [task, passed] of Object.entries(tasks)) {
                const status = passed ? '✅ PASSED' : '❌ FAILED';
                comment += `- ${status} ${task}\n`;
              }
              comment += '\n';
            }
            
            comment += `_Generated by GitHub Actions_`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: comment
            });
